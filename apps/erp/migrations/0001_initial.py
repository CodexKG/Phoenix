# Generated by Django 5.0.6 on 2024-10-09 04:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название группы')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Группа разрешения',
                'verbose_name_plural': 'Группы разрешений',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('codename', models.CharField(max_length=100, unique=True, verbose_name='Кодовое имя')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Разрешение',
                'verbose_name_plural': 'Разрешения',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('note', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комментарий')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_cities', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер телефона')),
                ('selery', models.PositiveBigIntegerField(blank=True, default=0, null=True, verbose_name='Зарплата')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Электронная почта')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='Дата рождения')),
                ('image', models.ImageField(blank=True, null=True, upload_to='employee_images/', verbose_name='Фотография сотрудника')),
                ('employee_position', models.CharField(choices=[('Менеджер', 'Менеджер'), ('Администратор', 'Администратор'), ('Директор', 'Директор'), ('Кассир', 'Кассир'), ('Стажер', 'Стажер'), ('Курьер', 'Курьер'), ('Смм', 'Смм'), ('Прочее', 'Прочее')], default='Прочее', max_length=100, verbose_name='Должность')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('city', models.ManyToManyField(related_name='city_employees', to='erp.city', verbose_name='Город')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_employee', to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='Вы можете дать группу разрещений чтобы пользователь имел доступ определенным функциям', to='erp.grouppermission', verbose_name='Группа разрещений')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Вы можете указать каким разделам будет иметь доступ сотрудник', to='erp.permission', verbose_name='Права пользователя')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='EmployeeEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='user/education_logo/', verbose_name='Лого университета')),
                ('university', models.CharField(max_length=255, verbose_name='Название университета')),
                ('year', models.CharField(max_length=255, verbose_name='Сколько лет обучился')),
                ('location', models.CharField(max_length=255, verbose_name='Место обучения')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='education', to='erp.employee', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='EmployeeExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='user/profile_experience_logo/', verbose_name='Логотип компании где работал')),
                ('position', models.CharField(max_length=255, verbose_name='Должность компании')),
                ('title', models.CharField(max_length=255, verbose_name='Название компании')),
                ('year', models.CharField(max_length=255, verbose_name='Сколько лет проработал')),
                ('location', models.CharField(max_length=255, verbose_name='Место работы')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_experience', to='erp.employee', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Опыт работы',
                'verbose_name_plural': 'Опыт работы',
            },
        ),
        migrations.AddField(
            model_name='grouppermission',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='erp.permission', verbose_name='Права'),
        ),
        migrations.CreateModel(
            name='PhotosProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user/profie_photos/', verbose_name='Фотография')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_employee', to='erp.employee', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
    ]
